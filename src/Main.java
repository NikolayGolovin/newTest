public class Main {
    public static void main(String[] args) {
        // Получаем экземпляр Calculator через вызов статической переменной instance
        Calculator calc = Calculator.instance.get();

        // Производим математические операции над числами
        int a = calc.plus.apply(1, 2);
        int b = calc.minus.apply(1, 1);

        // Обрабатываем деление на ноль
        try {
            int c = calc.devide.apply(a, b);  // Здесь возникнет ошибка, так как b = 0
            calc.println.accept(c);
        } catch (ArithmeticException e) {
            System.out.println("Ошибка: " + e.getMessage());
        }
    }
}

//Объяснение ошибки
//В данном коде возникает ошибка деления на ноль, так как переменная b равна 0. Деление на ноль вызывает ArithmeticException. В решении выше мы обрабатываем это исключение, используя блок try-catch, чтобы предотвратить завершение программы с ошибкой и корректно обработать ситуацию.
//
//Используя блок try-catch, мы можем выводить понятное сообщение об ошибке и избежать аварийного завершения программы. В данном случае, если происходит деление на ноль, выводится сообщение "Ошибка: Деление на ноль".